package br.com.pitang.desafio.exceptions;

/**
 * 
 * @author rianmachado@gmail.com
 *
 */
public enum CodeBusinessMessageUser implements CodeMsg {

	ERROR_USER_NAO_LOCALIZADO("MSG_USER_NAO_LOCALIZADO", 401), ERROR_USER_RECORD("MSG_USER_RECORD_ERROR", 500),
	ERROR_USER_FIRSTNAME_NAO_INFORMADO("MSG_USER_FIRSTNAME_NAO_INFORMADO", 500),
	ERROR_USER_LASTNAME_NAO_INFORMADO("MSG_USER_LASTNAME_NAO_INFORMADO", 500),
	ERROR_USER_EMAIL_NAO_INFORMADO("MSG_USER_EMAIL_NAO_INFORMADO", 500),
	ERROR_USER_EMAIL_INVALIDO("MSG_USER_EMAIL_INVALIDO", 500),
	ERROR_USER_PASSWORD_NAO_INFORMADO("MSG_USER_PASSWORD_NAO_INFORMADO", 500),
	ERROR_USER_PHONE_NAO_INFORMADO("MSG_USER_PHONE_NAO_INFORMADO", 500),
	ERROR_USER_PHONE_NUMBER_NAO_INFORMADO("MSG_USER_PHONE_NUMBER_NAO_INFORMADO", 500),
	ERROR_USER_PHONE_CODE_NAO_INFORMADO("MSG_USER_PHONE_CODE_NAO_INFORMADO", 500),
	ERROR_USER_PHONE_COUNTRY_NAO_INFORMADO("MSG_USER_PHONE_COUNTRY_NAO_INFORMADO", 500),
	ERROR_USER_END_PASWORD_NAO_LOCALIZADO("MSG_USER_END_PASWORD_NAO_LOCALIZADO", 401),
	ERROR_USER_EMAIL_JA_INFORMADO("MSG_USER_EMAIL_JA_INFORMADO", 500),;

	private String idBundle;
	private int codeError;

	private CodeBusinessMessageUser(String idBundle, int codeError) {
		this.idBundle = idBundle;
		this.codeError = codeError;
	}

	@Override
	public String getIdBundle() {
		return idBundle;
	}

	@Override
	public int getCodeError() {
		return codeError;
	}

	public static CodeBusinessMessageUser getCodeBusinessMessageByIdBundle(String key) {
		switch (key) {
		case "MSG_USER_RECORD_ERROR":
			return ERROR_USER_RECORD;
		case "MSG_USER_FIRSTNAME_NAO_INFORMADO":
			return ERROR_USER_FIRSTNAME_NAO_INFORMADO;
		case "MSG_USER_LASTNAME_NAO_INFORMADO":
			return ERROR_USER_LASTNAME_NAO_INFORMADO;
		case "MSG_USER_EMAIL_NAO_INFORMADO":
			return ERROR_USER_EMAIL_NAO_INFORMADO;
		case "MSG_USER_EMAIL_INVALIDO":
			return ERROR_USER_EMAIL_INVALIDO;
		case "MSG_USER_PASSWORD_NAO_INFORMADO":
			return ERROR_USER_PASSWORD_NAO_INFORMADO;
		case "MSG_USER_PHONE_NAO_INFORMADO":
			return ERROR_USER_PHONE_NAO_INFORMADO;
		case "MSG_USER_PHONE_NUMBER_NAO_INFORMADO":
			return ERROR_USER_PHONE_NUMBER_NAO_INFORMADO;
		case "MSG_USER_PHONE_CODE_NAO_INFORMADO":
			return ERROR_USER_PHONE_CODE_NAO_INFORMADO;
		case "MSG_USER_PHONE_COUNTRY_NAO_INFORMADO":
			return ERROR_USER_PHONE_COUNTRY_NAO_INFORMADO;
		default:
			return null;
		}
	}

}